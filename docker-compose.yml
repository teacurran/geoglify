version: '3.1'

services:
  
  app:
    container_name: app
    restart: always
    build: ./app
    working_dir: /opt/app
    ports:
      - "3100:3000"
    environment:
      API_URL: http://localhost:8082
      TILESERVER_URL: http://localhost:3001
      EXP_API_URL: http://localhost:8082
      REALTIME_URL: http://localhost:8082
      NODE_ENV: development
    volumes:
      - ./app:/opt/app
    entrypoint: []
    command: "npm run dev"

  # mongodb:
  #   container_name: mongodb
  #   restart: always
  #   image: mongodb/atlas
  #   privileged: true
  #   command: |
  #     /bin/bash -c "atlas deployments setup --type local --port 27778 --bindIpAll --username root --password root --force && tail -f /dev/null"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - mongodb_data:/var/lib/containers
  #   ports:
  #     - 27778:27778

  mongodb:
    image: mongodb/mongodb-atlas-local
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=root
      - MONGODB_INITDB_ROOT_PASSWORD=root
    ports:
      - 27778:27017
    volumes:
      - mongodb_data:/data/db

  ais-stream:
    build: ./ais-stream
    restart: always
    container_name: ais-stream
    working_dir: /opt/ais-stream
    environment:
      - NODE_ENV=development
      # - MONGODB_CONNECTION_STRING=mongodb+srv://geoglify:Fp0p5DWwjUYtdYPB@cluster0.2n7eqof.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - MONGODB_CONNECTION_STRING=mongodb://root:root@mongodb:27017/?directConnection=true
      - AISSTREAM_API_KEY=7fb1e16f93a4d520d83a95e325c55e69b3b4fc0b
      - AIS_SERVER_HOST=aisstream.io
    command: "node main.js"

  #ais-decoder:
  #  build: ./ais-decoder
  #  restart: always
  #  container_name: ais-decoder
  #  working_dir: /opt/ais-decoder
  #  environment:
  #    - NODE_ENV=production
  #    - MONGODB_CONNECTION_STRING=mongodb://root:root@mongodb:27778/?directConnection=true&authMechanism=DEFAULT
  #    - AIS_SERVER_HOST=153.44.253.27
  #    - AIS_SERVER_PORT=5631
  #  command: "node main.js"
  #  depends_on:
  #    - mongodb

  realtime:
    build: ./realtime
    restart: always
    container_name: realtime
    working_dir: /opt/realtime
    environment:
      - NODE_ENV=development
      # - MONGODB_CONNECTION_STRING=mongodb+srv://geoglify:Fp0p5DWwjUYtdYPB@cluster0.2n7eqof.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - MONGODB_CONNECTION_STRING=mongodb://root:root@mongodb:27017/?directConnection=true
    ports:
      - "8080:8080"
    command: "node main.js"

  api:
    build: ./api
    container_name: api
    restart: always
    environment:
      PHP_OPCACHE_ENABLE: 0
      PRODUCTION: 0
    ports:
      - 8082:80
    volumes:
      - ./api:/opt/api
      - vendor_data:/opt/api/vendor
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api/"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - database

  database:
    build: ./database
    image: database
    restart: always
    container_name: database
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data

  martin:
    image: ghcr.io/maplibre/martin:latest
    restart: always
    container_name: martin
    command: --config /app/config.yml
    ports:
      - "3001:3000"
    depends_on:
      - database
    volumes:
      - ./martin:/app

volumes:
  vendor_data:
  mongodb_data:
  database_data: